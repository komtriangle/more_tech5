// <auto-generated />
using System;
using LightFireMoreTech5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LightFireMoreTech5.Migrations
{
    [DbContext(typeof(BankServicesContext))]
    [Migration("20231013190054_nullableKep")]
    partial class nullableKep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LightFireMoreTech5.Data.Entities.Atm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography (Point,4326)")
                        .HasColumnName("location");

                    b.HasKey("Id")
                        .HasName("pk_atms");

                    b.HasIndex("Location")
                        .HasDatabaseName("ix_atms_location");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Location"), "GIST");

                    b.ToTable("atms", (string)null);
                });

            modelBuilder.Entity("LightFireMoreTech5.Data.Entities.Office", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<bool?>("AllDay")
                        .HasColumnType("bool")
                        .HasColumnName("allday");

                    b.Property<bool?>("HasRamp")
                        .HasColumnType("bool")
                        .HasColumnName("hasramp");

                    b.Property<long>("IndividualShceduleId")
                        .HasColumnType("bigint")
                        .HasColumnName("individualshceduleid");

                    b.Property<long?>("Kep")
                        .HasColumnType("bigint")
                        .HasColumnName("kep");

                    b.Property<long>("LegalEntityShceduleId")
                        .HasColumnType("bigint")
                        .HasColumnName("legalentityshceduleid");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography (Point,4326)")
                        .HasColumnName("location");

                    b.Property<string>("MetroStation")
                        .HasColumnType("text")
                        .HasColumnName("metrostation");

                    b.Property<bool?>("MyOffice")
                        .HasColumnType("bool")
                        .HasColumnName("myoffice");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("OfficeType")
                        .HasColumnType("text")
                        .HasColumnName("officetype");

                    b.Property<bool?>("Rko")
                        .HasColumnType("bool")
                        .HasColumnName("rko");

                    b.Property<string>("SalePointFormat")
                        .HasColumnType("text")
                        .HasColumnName("salepointformat");

                    b.HasKey("Id")
                        .HasName("pk_offices");

                    b.HasIndex("IndividualShceduleId")
                        .HasDatabaseName("ix_offices_individualshceduleid");

                    b.HasIndex("LegalEntityShceduleId")
                        .HasDatabaseName("ix_offices_legalentityshceduleid");

                    b.HasIndex("Location")
                        .HasDatabaseName("ix_offices_location");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Location"), "GIST");

                    b.ToTable("offices", (string)null);
                });

            modelBuilder.Entity("LightFireMoreTech5.Data.Entities.OfficeSchedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FridayEnd")
                        .HasColumnType("text")
                        .HasColumnName("fridayend");

                    b.Property<string>("FridayStart")
                        .HasColumnType("text")
                        .HasColumnName("fridaystart");

                    b.Property<string>("MondayEnd")
                        .HasColumnType("text")
                        .HasColumnName("mondayend");

                    b.Property<string>("MondayStart")
                        .HasColumnType("text")
                        .HasColumnName("mondaystart");

                    b.Property<string>("SaturdayEnd")
                        .HasColumnType("text")
                        .HasColumnName("saturdayend");

                    b.Property<string>("SaturdayStart")
                        .HasColumnType("text")
                        .HasColumnName("saturdaystart");

                    b.Property<string>("SundayEnd")
                        .HasColumnType("text")
                        .HasColumnName("sundayend");

                    b.Property<string>("SundayStart")
                        .HasColumnType("text")
                        .HasColumnName("sundaystart");

                    b.Property<string>("ThursdayEnd")
                        .HasColumnType("text")
                        .HasColumnName("thursdayend");

                    b.Property<string>("ThursdayStart")
                        .HasColumnType("text")
                        .HasColumnName("thursdaystart");

                    b.Property<string>("TuesdayEnd")
                        .HasColumnType("text")
                        .HasColumnName("tuesdayend");

                    b.Property<string>("TuesdayStart")
                        .HasColumnType("text")
                        .HasColumnName("tuesdaystart");

                    b.Property<string>("WednesdayEnd")
                        .HasColumnType("text")
                        .HasColumnName("wednesdayend");

                    b.Property<string>("WednesdayStart")
                        .HasColumnType("text")
                        .HasColumnName("wednesdaystart");

                    b.HasKey("Id")
                        .HasName("pk_office_schedule");

                    b.ToTable("office_schedule", (string)null);
                });

            modelBuilder.Entity("LightFireMoreTech5.Data.Entities.Office", b =>
                {
                    b.HasOne("LightFireMoreTech5.Data.Entities.OfficeSchedule", "IndividualSchedule")
                        .WithMany("IndividualOffices")
                        .HasForeignKey("IndividualShceduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_offices_officeschedules_individualscheduleid");

                    b.HasOne("LightFireMoreTech5.Data.Entities.OfficeSchedule", "LegalEntitySchedule")
                        .WithMany("LegalEntitiesOffices")
                        .HasForeignKey("LegalEntityShceduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_offices_officeschedules_legalentityscheduleid");

                    b.Navigation("IndividualSchedule");

                    b.Navigation("LegalEntitySchedule");
                });

            modelBuilder.Entity("LightFireMoreTech5.Data.Entities.OfficeSchedule", b =>
                {
                    b.Navigation("IndividualOffices");

                    b.Navigation("LegalEntitiesOffices");
                });
#pragma warning restore 612, 618
        }
    }
}
